# File: .github/workflows/azure-functions-deploy.yml
name: Deploy Azure Function App
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: your-function-app-name    # set this to your function app name
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'               # set this to the path to your function app project
  NODE_VERSION: '18.x'                              # set this to the node version to use (e.g. '18.x')

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: Setup Node ${{ env.NODE_VERSION }} Environment
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: 'Resolve Project Dependencies Using Npm'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        npm install
        npm run build --if-present
        npm run test --if-present
        popd

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZUREWEBJOBS_PUBLISH_PROFILE }}
        # Alternatively, if using managed identity:
        # creds: ${{ secrets.AZURE_RBAC_CREDENTIALS }}

    # Optional: Add status check
    - name: Check Function App Status
      shell: bash
      run: |
        sleep 30  # Wait for deployment to complete
        STATUS_URL="https://${{ env.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net/api/health"
        RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" $STATUS_URL)
        if [ "$RESPONSE" = "200" ]; then
          echo "Function App is running successfully!"
        else
          echo "Function App may have issues. Status code: $RESPONSE"
          exit 1
        fi